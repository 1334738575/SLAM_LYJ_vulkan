#version 450
layout(local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;

layout (binding = 0) uniform UBO
{
    uint size;
    // mat3 R;
    // vec3 t;
    // // vec4 K;
    float fx;
    float fy;
    float cx;
    float cy;
    uint s;
    uint w;
    uint h;
}ubo;
layout(binding = 1) buffer Data{
    float nws[];
};
layout(binding = 2) buffer Data2{
    float ncs[];
};
layout(binding = 3) buffer Data3{
    float T[];
};

void main()
{
    uint ind = gl_GlobalInvocationID.x;

    if(ind >= ubo.size)
        return;
    for(uint i=ind*ubo.s;i<(ind+1)*ubo.s;++i)
    {
        if(i >= ubo.size)
            return;
        ncs[i*3+0] = T[0] * ncs[i*3+0] + T[3] * ncs[i*3+1] + T[6] * ncs[i*3+2];
        ncs[i*3+1] = T[1] * ncs[i*3+0] + T[4] * ncs[i*3+1] + T[7] * ncs[i*3+2];
        ncs[i*3+2] = T[2] * ncs[i*3+0] + T[5] * ncs[i*3+1] + T[8] * ncs[i*3+2];
    }
}