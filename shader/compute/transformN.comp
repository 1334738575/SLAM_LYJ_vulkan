#version 450
layout(local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;

layout (binding = 0) uniform UBO
{
    uint vSize;
    uint fSize;
    // mat3 R;
    // vec3 t;
    // // vec4 K;
    float fx;
    float fy;
    float cx;
    float cy;
    uint vStep;
    uint fStep;
    uint w;
    uint h;
    float detd;
    float maxD;
    float minD;
    float csTh;
    uint dStep;
}ubo;
layout(binding = 1) buffer Data{
    float nws[];
};
layout(binding = 2) buffer Data2{
    float ncs[];
};
layout(binding = 3) buffer Data3{
    float T[];
};

void main()
{
    uint ind = gl_GlobalInvocationID.x;

    if(ind*ubo.fStep >= ubo.fSize)
        return;
    for(uint i=ind*ubo.fStep;i<(ind+1)*ubo.fStep;++i)
    {
        if(i >= ubo.fSize)
            return;
        ncs[i*3+0] = T[0] * nws[i*3+0] + T[3] * nws[i*3+1] + T[6] * nws[i*3+2];
        ncs[i*3+1] = T[1] * nws[i*3+0] + T[4] * nws[i*3+1] + T[7] * nws[i*3+2];
        ncs[i*3+2] = T[2] * nws[i*3+0] + T[5] * nws[i*3+1] + T[8] * nws[i*3+2];
    }
}