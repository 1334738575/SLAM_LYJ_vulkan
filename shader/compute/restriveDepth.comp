#version 450
layout(local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;

layout (binding = 0) uniform UBO
{
    uint vSize;
    uint fSize;
    // mat3 R;
    // vec3 t;
    // // vec4 K;
    float fx;
    float fy;
    float cx;
    float cy;
    uint vStep;
    uint fStep;
    uint w;
    uint h;
    float detd;
    float maxD;
    float minD;
    float csTh;
    uint dStep;
}ubo;
layout(binding = 1) buffer Data{
    float depths[];
};

void main()
{
    uint ind = gl_GlobalInvocationID.x;
    // gl_LocalInvocationID
    // gl_WorkGroupSize

    uint sss = ubo.w * ubo.h;
    if(ind * ubo.dStep >= sss)
        return;
    for(uint i=ind*ubo.dStep;i<(ind+1)*ubo.dStep;++i)
    {
        if(i >= sss)
            return;
        if(depths[i] == 0.0 || depths[i] == 1.0)
            depths[i] = 3.402823466e+38;
        else
            depths[i] = depths[i] * ubo.maxD;
    }
}