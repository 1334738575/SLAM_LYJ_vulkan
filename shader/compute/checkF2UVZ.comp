#version 450
layout(local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;

layout (binding = 0) uniform UBO
{
    uint vSize;
    uint fSize;
    // mat3 R;
    // vec3 t;
    // // vec4 K;
    float fx;
    float fy;
    float cx;
    float cy;
    uint vStep;
    uint fStep;
    uint w;
    uint h;
    float detd;
    float maxD;
    float minD;
    float csTh;
    uint dStep;
}ubo;
layout(binding = 1) buffer Data{
    float cuvds[];
};
layout(binding = 2) buffer Data2{
    float depths[];
};
layout(binding = 3) buffer Data3{
    uint pValids[];
};
layout(binding = 4) buffer Data4{
    uint faces[];
};
layout(binding = 5) buffer Data5{
    uint fValids[];
};

void main()
{
    uint ind = gl_GlobalInvocationID.x;
    if(ind*ubo.fStep >= ubo.fSize)
        return;
    float u;
    float v;
    uint ui;
    uint vi;
    for(uint i=ind*ubo.fStep;i<(ind+1)*ubo.fStep;++i)
    {
        if(i >= ubo.fSize)
            return;
        // u = cuvds[i*3 + 0];
        // v = cuvds[i*3 + 1];
        // if(u >= ubo.w || u < 0 || v >= ubo.h || v < 0)
        //     continue;
        // if(cuvds[i*3 + 2] <= 0)
        //     continue;
        // ui = uint(u);
        // vi = uint(v);
        // if(depths[vi * ubo.w + vi] == 3.402823466e+38)
        //     continue;
        // if(depths[vi * ubo.w + vi] > (cuvds[i*3 + 2] - 1) || depths[vi * ubo.w + vi] < (cuvds[i*3 + 2] + 1))
        //     continue;
        if(pValids[faces[3 * i + 0]] == 1 || pValids[faces[3 * i + 1]] == 1 || pValids[faces[3 * i + 2]] == 1)
            fValids[i] = 1;
    }
}