#version 450
layout(local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;

layout (binding = 0) uniform UBO
{
    uint vSize;
    uint fSize;
    // mat3 R;
    // vec3 t;
    // // vec4 K;
    float fx;
    float fy;
    float cx;
    float cy;
    uint vStep;
    uint fStep;
    uint w;
    uint h;
    float detd;
    float maxD;
    float minD;
    float csTh;
    uint dStep;
}ubo;
layout(binding = 1) buffer Data{
    float uvds[];
};
layout(binding = 2) buffer Data2{
    float depths[];
};
layout(binding = 3) buffer Data3{
    uint pValids[];
};

void main()
{
    uint ind = gl_GlobalInvocationID.x;
    if(ind*ubo.vStep >= ubo.vSize)
        return;
    float u;
    float v;
    uint ui;
    uint vi;
    float z;
    float ddd;
    float zPre;
    for(uint i=ind*ubo.vStep;i<(ind+1)*ubo.vStep;++i)
    {
        if(i >= ubo.vSize)
            return;
        u = uvds[i*3 + 0];
        v = uvds[i*3 + 1];
        if(u >= ubo.w || u < 0 || v >= ubo.h || v < 0)
            continue;
        z = uvds[i*3 + 2];
        if(z <= 0)
            continue;
        ui = uint(u);
        vi = uint(v);
        ddd = depths[vi * ubo.w + ui];
        if((ddd != 3.402823466e+38) && (z <= (ddd + ubo.detd)) && (z >= (ddd - ubo.detd)))
        {
            pValids[i] = 1;
            continue;
        }
        for(uint ii=vi-1;ii<=vi+1;++ii){
            if(ii < 0 || ii >= ubo.h)
                continue;
            for(uint jj=ui-1;jj<=ui+1;++jj){
                if(jj < 0 || jj>=ubo.w)
                    continue;
                zPre = depths[ii * ubo.w + jj];
                if(zPre == 3.402823466e+38)
                    continue;
                if(ddd > zPre)
                    ddd = zPre;
            }
        }
        if(ddd == 3.402823466e+38)
            continue;
        if((z > (ddd + ubo.detd)) || (z < (ddd - ubo.detd)))
            continue;
        pValids[i] = 1;
    }
}